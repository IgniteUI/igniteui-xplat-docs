pool:
  name: BuildAgentOnPrem
  demands: npm

trigger:
- vnext
- master

variables:
  BGNuget.IgniteUI: '\\igbgsofsmb2.infragistics.local\Builds\NuGet\IgniteUI'

name: $(BuildDefinitionName)_$(Year:yyyy).$(Month).$(DayOfMonth)$(Rev:.r)

steps:
- task: NodeTool@0
  inputs:
    versionSource: 'spec'
    versionSpec: '16.x'

- script: echo '$(Build.BuildNumber)'

- task: DeleteFiles@1
  displayName: 'Delete files from $(Build.SourcesDirectory)'
  inputs:
    SourceFolder: '$(Build.SourcesDirectory)'
    Contents: |
     node_modules
     *.nupkg

- task: RegexReplace@3
  displayName: 'replace environment in doc/docfx'
  inputs:
    InputSearchPattern: |
      doc\**\*.*
      docfx\**\*.*
    FindRegex: 'environment:dvDemosBaseUrl'
    ReplaceRegex: 'environment:demosBaseUrl'
    UseUTF8: true
    UseRAW: true
  enabled: false

- task: Npm@1
  displayName: 'npm cache clean'
  inputs:
    command: custom
    workingDir: '$(Build.SourcesDirectory)'
    verbose: false
    customCommand: 'cache clean --force'
  continueOnError: true

- task: Npm@1
  displayName: 'npm ci'
  inputs:
    command: custom
    workingDir: '$(Build.SourcesDirectory)'
    verbose: false
    customCommand: ci

- task: Npm@1
  displayName: 'npm build WebComponents'
  inputs:
    command: custom
    workingDir: '$(Build.SourcesDirectory)'
    verbose: false
    customCommand: 'run buildWebComponents'

- task: Npm@1
  displayName: 'npm build staging WebComponents EN'
  inputs:
    command: custom
    workingDir: '$(Build.SourcesDirectory)'
    verbose: false
    customCommand: 'run build-staging -- --plat=WebComponents --lang=en'

- task: DeleteFiles@1
  displayName: 'Delete files from $(Build.SourcesDirectory)\node_modules'
  inputs:
    SourceFolder: '$(Build.SourcesDirectory)\node_modules'
    Contents: '**'

- task: NuGetCommand@2
  displayName: 'NuGet pack WebComponents Staging EN'
  inputs:
    command: pack
    packagesToPack: '$(Build.SourcesDirectory)\XplatDocFX.nuspec'
    versioningScheme: byBuildNumber
    buildProperties: 'langFolder=en;lang=Staging;plat=WebComponents'
  condition: ne(variables['Build.SourceBranchName'], 'master')

- task: CopyFiles@2
  displayName: 'Copy Files to: $(BGNuget.IgniteUI)'
  inputs:
    SourceFolder: '$(Build.ArtifactStagingDirectory)'
    Contents: '*.nupkg'
    TargetFolder: '$(BGNuget.IgniteUI)'

- task: Npm@1
  displayName: 'npm ci'
  inputs:
    command: custom
    workingDir: '$(Build.SourcesDirectory)'
    verbose: false
    customCommand: ci

- task: Npm@1
  displayName: 'npm build production WebComponents EN'
  inputs:
    command: custom
    workingDir: '$(Build.SourcesDirectory)'
    verbose: false
    customCommand: 'run build-production -- --plat=WebComponents --lang=en'

- task: DeleteFiles@1
  displayName: 'Delete files from $(Build.SourcesDirectory)\node_modules'
  inputs:
    SourceFolder: '$(Build.SourcesDirectory)\node_modules'
    Contents: '**'

- task: DeleteFiles@1
  displayName: 'Delete files from $(Build.ArtifactStagingDirectory)'
  inputs:
    SourceFolder: '$(Build.ArtifactStagingDirectory)'
    Contents: '*.nupkg'

- task: NuGetCommand@2
  displayName: 'NuGet pack Production EN'
  inputs:
    command: pack
    packagesToPack: '$(Build.SourcesDirectory)\IgniteUIDocFX.nuspec'
    versioningScheme: byBuildNumber
    buildProperties: 'langFolder=en;lang=Production'
  condition: eq(variables['Build.SourceBranchName'], 'master')

- task: CopyFiles@2
  displayName: 'Copy Files to: $(BGNuget.IgniteUI)'
  inputs:
    SourceFolder: '$(Build.ArtifactStagingDirectory)'
    Contents: '*.nupkg'
    TargetFolder: '$(BGNuget.IgniteUI)'

- powershell: |
   # You can write your powershell scripts inline here. 
   # You can also pass predefined and custom variables to this scripts using arguments
   
   $version=("$(build.buildnumber)").split('_')[1]
   Write-Host "##vso[task.setvariable variable=BuildVersion]$version"
  workingDirectory: '$(Build.SourcesDirectory)'
  displayName: 'PowerShell Script'

- script: '"$(OctoExe)" create-release --project=WebComponentsDocFXStaging --server=http://octopus.infragistics.local/api --apiKey=$(octoToken) --version=$(BuildVersion) --package=IgniteUIDocFXStaging:$(BuildVersion) --deployto=Staging --deploymenttimeout=00:20:00 --force=true --waitfordeployment'
  displayName: 'Deploy to Staging EN'
  enabled: false
  condition: ne(variables['Build.SourceBranchName'], 'master')

- script: '"$(OctoExe)" create-release --project=WebComponentsFXProduction --server=http://octopus.infragistics.local/api --apiKey=$(octoToken) --version=$(BuildVersion) --package=IgniteUIDocFXProduction:$(BuildVersion) --deployto=Production --deploymenttimeout=00:20:00 --force=true --waitfordeployment'
  displayName: 'Deploy to Production EN'
  enabled: false
  condition: and(eq(variables['Build.SourceBranchName'], 'master'), contains(variables['build.reason'], 'CI'))

- task: PowerShell@2
  displayName: 'Retry the octopus deployment Production'
  enabled: false
  inputs:
    targetType: filePath
    filePath: './"\\igbgsofsmb1\Departments\ES\Powershell Scripts\OctopusCheckRelease.ps1"'
    arguments: '$(BuildVersion) "$(OctoExe)" $(octoToken) IgniteUIDocFXProduction Production'
  condition: failed()

