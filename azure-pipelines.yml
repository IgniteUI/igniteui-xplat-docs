pool:
  name: BuildAgentOnPrem
  demands: npm

trigger:
- vnext
- master

#Your build pipeline references a secret variable named ‘octoToken’. Create or edit the build pipeline for this YAML file, define the variable on the Variables tab, and then select the option to make it secret. See https://go.microsoft.com/fwlink/?linkid=865972
#Your build pipeline references an undefined variable named ‘BuildVersion’. Create or edit the build pipeline for this YAML file, define the variable on the Variables tab. See https://go.microsoft.com/fwlink/?linkid=865972
#Your build pipeline references an undefined variable named ‘BuildVersion’. Create or edit the build pipeline for this YAML file, define the variable on the Variables tab. See https://go.microsoft.com/fwlink/?linkid=865972
#Your build pipeline references a secret variable named ‘octoToken’. Create or edit the build pipeline for this YAML file, define the variable on the Variables tab, and then select the option to make it secret. See https://go.microsoft.com/fwlink/?linkid=865972
#Your build pipeline references an undefined variable named ‘BuildVersion’. Create or edit the build pipeline for this YAML file, define the variable on the Variables tab. See https://go.microsoft.com/fwlink/?linkid=865972
#Your build pipeline references an undefined variable named ‘BuildVersion’. Create or edit the build pipeline for this YAML file, define the variable on the Variables tab. See https://go.microsoft.com/fwlink/?linkid=865972
#Your build pipeline references an undefined variable named ‘BuildVersion’. Create or edit the build pipeline for this YAML file, define the variable on the Variables tab. See https://go.microsoft.com/fwlink/?linkid=865972
#Your build pipeline references a secret variable named ‘octoToken’. Create or edit the build pipeline for this YAML file, define the variable on the Variables tab, and then select the option to make it secret. See https://go.microsoft.com/fwlink/?linkid=865972
variables:
  BGNuget.IgniteUI: '\\igbgsofsmb2.infragistics.local\Builds\NuGet\IgniteUI'

steps:
- task: DeleteFiles@1
  displayName: 'Delete files from $(Build.SourcesDirectory)'
  inputs:
    SourceFolder: '$(Build.SourcesDirectory)'
    Contents: |
     node_modules
     *.nupkg

- task: Npm@1
  displayName: 'npm cache clean'
  inputs:
    command: custom
    workingDir: '$(Build.SourcesDirectory)'
    verbose: false
    customCommand: 'cache clean --force'
  continueOnError: true

- task: Npm@1
  displayName: 'npm ci'
  inputs:
    command: custom
    workingDir: '$(Build.SourcesDirectory)'
    verbose: false
    customCommand: ci

- task: Npm@1
  displayName: 'npm build staging EN'
  inputs:
    command: custom
    workingDir: '$(Build.SourcesDirectory)'
    verbose: false
    customCommand: 'run build-staging -- --lang=en'
  condition: ne(variables['Build.SourceBranchName'], 'master')

- task: DeleteFiles@1
  displayName: 'Delete files from $(Build.SourcesDirectory)\node_modules'
  inputs:
    SourceFolder: '$(Build.SourcesDirectory)\node_modules'
    Contents: '**'

- task: NuGetCommand@2
  displayName: 'NuGet pack Staging EN'
  inputs:
    command: pack
    packagesToPack: '$(Build.SourcesDirectory)\IgniteUIDocFX.nuspec'
    versioningScheme: byBuildNumber
    buildProperties: 'langFolder=en;lang=Staging'
  condition: ne(variables['Build.SourceBranchName'], 'master')

- task: CopyFiles@2
  displayName: 'Copy Files to: $(BGNuget.IgniteUI)'
  inputs:
    SourceFolder: '$(Build.ArtifactStagingDirectory)'
    Contents: '*.nupkg'
    TargetFolder: '$(BGNuget.IgniteUI)'

- task: Npm@1
  displayName: 'npm ci'
  inputs:
    command: custom
    workingDir: '$(Build.SourcesDirectory)'
    verbose: false
    customCommand: ci

- task: Npm@1
  displayName: 'npm build prod EN'
  inputs:
    command: custom
    workingDir: '$(Build.SourcesDirectory)'
    verbose: false
    customCommand: 'run build-production -- --lang=en'
  condition: eq(variables['Build.SourceBranchName'], 'master')

- task: DeleteFiles@1
  displayName: 'Delete files from $(Build.SourcesDirectory)\node_modules'
  inputs:
    SourceFolder: '$(Build.SourcesDirectory)\node_modules'
    Contents: '**'

- task: DeleteFiles@1
  displayName: 'Delete files from $(Build.ArtifactStagingDirectory)'
  inputs:
    SourceFolder: '$(Build.ArtifactStagingDirectory)'
    Contents: '*.nupkg'

- task: NuGetCommand@2
  displayName: 'NuGet pack Production EN'
  inputs:
    command: pack
    packagesToPack: '$(Build.SourcesDirectory)\IgniteUIDocFX.nuspec'
    versioningScheme: byBuildNumber
    buildProperties: 'langFolder=en;lang=Production'
  condition: eq(variables['Build.SourceBranchName'], 'master')

- task: CopyFiles@2
  displayName: 'Copy Files to: $(BGNuget.IgniteUI)'
  inputs:
    SourceFolder: '$(Build.ArtifactStagingDirectory)'
    Contents: '*.nupkg'
    TargetFolder: '$(BGNuget.IgniteUI)'

- powershell: |
   # You can write your powershell scripts inline here. 
   # You can also pass predefined and custom variables to this scripts using arguments
   
   $version=("$(build.buildnumber)").split('_')[1]
   Write-Host "##vso[task.setvariable variable=BuildVersion]$version"
  workingDirectory: '$(Build.SourcesDirectory)'
  displayName: 'PowerShell Script'

- script: '"$(OctoExe)" create-release --project=IgniteUIDocFXStaging --server=http://octopus.infragistics.local/api --apiKey=$(octoToken) --version=$(BuildVersion) --package=IgniteUIDocFXStaging:$(BuildVersion) --deployto=Staging --deploymenttimeout=00:20:00 --force=true --waitfordeployment'
  displayName: 'Deploy to Staging EN'
  condition: ne(variables['Build.SourceBranchName'], 'master')

- script: '"$(OctoExe)" create-release --project=IgniteUIDocFXProduction --server=http://octopus.infragistics.local/api --apiKey=$(octoToken) --version=$(BuildVersion) --package=IgniteUIDocFXProduction:$(BuildVersion) --deployto=Production --deploymenttimeout=00:20:00 --force=true --waitfordeployment'
  displayName: 'Deploy to Production EN'
  condition: and(eq(variables['Build.SourceBranchName'], 'master'), contains(variables['build.reason'], 'CI'))

- task: PowerShell@2
  displayName: 'Retry the octopus deployment Production'
  inputs:
    targetType: filePath
    filePath: './"\\igbgsofsmb1\Departments\ES\Powershell Scripts\OctopusCheckRelease.ps1"'
    arguments: '$(BuildVersion) "$(OctoExe)" $(octoToken) IgniteUIDocFXProduction Production'
  condition: failed()

