trigger:
  branches:
    include:
    - vnext
    - master
pr:
  branches:
    exclude:
    - '*'  # must quote since "*" is a YAML reserved character; we want a string

name: $(BuildDefinitionName)_$(Year:yyyy).$(Month).$(DayOfMonth)$(Rev:.r)

stages:
- stage: Build
  jobs:
  - job: BuildDocs
    pool:
      name: BuildAgentOnPrem
      demands: npm

    variables:
      buildType: staging
      ${{ if eq(variables['Build.SourceBranchName'], 'master') }}:
        buildType: 'production'

    steps:
    - task: NodeTool@0
      inputs:
        versionSource: 'spec'
        versionSpec: '16.x'

    - script: echo '$(Build.BuildNumber)'
      displayName: 'Display Build Number'

    - script: echo '$(buildType)'
      displayName: 'Display Build Type'

    - task: RegexReplace@3
      displayName: 'replace environment in doc/docfx'
      inputs:
        InputSearchPattern: |
          doc\**\*.*
          docfx\**\*.*
        FindRegex: 'environment:dvDemosBaseUrl'
        ReplaceRegex: 'environment:demosBaseUrl'
        UseUTF8: true
        UseRAW: true
      enabled: false

    - task: Npm@1
      displayName: 'npm cache clean'
      inputs:
        command: custom
        workingDir: '$(Build.SourcesDirectory)'
        verbose: false
        customCommand: 'cache clean --force'
      continueOnError: true

    - task: Npm@1
      displayName: 'npm ci'
      inputs:
        command: custom
        workingDir: '$(Build.SourcesDirectory)'
        verbose: false
        customCommand: ci
    - task: Npm@1
      displayName: 'Build WebComponents'
      inputs:
        command: custom
        workingDir: '$(Build.SourcesDirectory)'
        verbose: false
        customCommand: 'run buildWebComponents'
    - task: Npm@1
      displayName: 'Build WebComponents $(buildType) EN'
      inputs:
        command: custom
        workingDir: '$(Build.SourcesDirectory)'
        verbose: false
        customCommand: 'run build-$(buildType) -- --plat=WebComponents --lang=en'

    - task: NuGetCommand@2
      displayName: 'Package WebComponents EN'
      inputs:
        command: pack
        packagesToPack: '$(Build.SourcesDirectory)\XplatDocFX.nuspec'
        versioningScheme: byBuildNumber
        buildProperties: 'langFolder=en;type=$(buildType);plat=WebComponents'

    - task: ArchiveFiles@2
      displayName: 'Package WebComponents EN - zip'
      inputs:
        # dist\$plat$\$langFolder$\_site
        rootFolderOrFile: $(Build.SourcesDirectory)/dist/WebComponents/en/_site
        includeRootFolder: false
        archiveType: 'zip'
        archiveFile: $(Build.DefaultWorkingDirectory)/XPlatDocFX_WebComponents_staging.zip  #XplatDocFX_React_staging.2022.12.13.2
        replaceExistingArchive: true

    - task: PublishPipelineArtifact@1
      displayName: 'Publish WebComponents EN - zip'
      inputs:
        targetPath: $(System.DefaultWorkingDirectory)/XPlatDocFX_WebComponents_staging.zip
        artifactName: WebApp

    - task: Npm@1
      displayName: 'Build Blazor EN'
      inputs:
        command: custom
        workingDir: '$(Build.SourcesDirectory)'
        verbose: false
        customCommand: 'run build-$(buildType) -- --plat=Blazor --lang=en'

    - task: NuGetCommand@2
      displayName: 'Package Blazor EN'
      inputs:
        command: pack
        packagesToPack: '$(Build.SourcesDirectory)\XplatDocFX.nuspec'
        versioningScheme: byBuildNumber
        buildProperties: 'langFolder=en;type=$(buildType);plat=Blazor'

    - task: Npm@1
      displayName: 'Build React EN'
      inputs:
        command: custom
        workingDir: '$(Build.SourcesDirectory)'
        verbose: false
        customCommand: 'run build-$(buildType) -- --plat=React --lang=en'

    - task: NuGetCommand@2
      displayName: 'Package React EN'
      inputs:
        command: pack
        packagesToPack: '$(Build.SourcesDirectory)\XplatDocFX.nuspec'
        versioningScheme: byBuildNumber
        buildProperties: 'langFolder=en;type=$(buildType);plat=React'

    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifacts'
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop'
        publishLocation: 'Container'

    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: '$(Build.ArtifactStagingDirectory)'
        artifact: 'XPlatDocs'
        publishLocation: 'pipeline'