trigger:
  branches:
    include:
    - vnext
    - master
    - 'sstoychev/ng-pipes'
  paths:
    exclude:
    - '**/jp/*'
    - '**/kr/*'
pr:
  branches:
    exclude:
    - '*'  # must quote since "*" is a YAML reserved character; we want a string

parameters:
- name: isVerbose
  displayName: 'Get verbose output from steps - where configurable'
  type: boolean
  default: false

name: $(BuildDefinitionName)_$(Year:yyyy).$(Month).$(DayOfMonth)$(Rev:.r)

variables:
  - name: buildType
    ${{ if eq(variables['Build.SourceBranchName'], 'master') }}:
      value: 'production'
    ${{ else }}:  
      value: 'staging'
  # Since we are using more than 1 git repo, we need to explicitly specify that we want to compile inside the 1st git repo
  - name: selfSourcesDir
    value: '$(Build.SourcesDirectory)\igniteui-xplat-docs'
  # This is the variable that the gulp script looks at internally. I am not sure 
  - name: 'NODE_ENV'
    value: '$(buildType)'
  - name: 'language'
    value: 'en'

resources:
  repositories:
    - repository: IgniteUIDocFX # In a different organization
      endpoint: ESShared
      type: github
      name: IgniteUI/igniteui-docfx
      ref: '$(Build.SourceBranch)'
      # ref: ESShared/XPlaform_$(language)_$(Build.BuildNumber)

stages:
- stage: Build
  pool:
    name: BuildAgentOnPrem
    demands: npm
  jobs:
  - job: BuildDocs
    steps:
      - checkout: self
      - task: NodeTool@0
        inputs:
          versionSource: 'spec'
          versionSpec: '16.x'

      - task: RegexReplace@3
        displayName: 'replace environment in doc/docfx'
        inputs:
          InputSearchPattern: |
            doc\**\*.*
            docfx\**\*.*
          FindRegex: 'environment:dvDemosBaseUrl'
          ReplaceRegex: 'environment:demosBaseUrl'
          UseUTF8: true
          UseRAW: true
        enabled: false

      - task: Npm@1
        displayName: 'npm ci'
        inputs:
          command: custom
          workingDir: '$(selfSourcesDir)'
          verbose: ${{ parameters.isVerbose }}
          customCommand: ci

#      - template: templates/build-steps-template.yml
#        parameters:
#          buildType: $(buildType)
#          platform: WebComponents
#          language: en
#          isVerbose: ${{ parameters.isVerbose }}
#          workingDir: '$(selfSourcesDir)'
#
#      - template: templates/build-steps-template.yml
#        parameters:
#          buildType: $(buildType)
#          platform: Blazor
#          language: en
#          isVerbose: ${{ parameters.isVerbose }}
#          workingDir: '$(selfSourcesDir)'
#
#      - template: templates/build-steps-template.yml
#        parameters:
#          buildType: $(buildType)
#          platform: React
#          language: en
#          isVerbose: ${{ parameters.isVerbose }}
#          workingDir: '$(selfSourcesDir)'

      # Angular doesn't produce an artifact so we are publish right now.
      - task: PublishPipelineArtifact@1
        displayName: 'Publish pipeline artifacts'
        inputs:
          targetPath: '$(Build.ArtifactStagingDirectory)'
          artifact: 'XPlatDocFX'

      - template: templates/build-steps-make-pr.yml
        parameters:
          buildType: $(buildType)
          platform: Angular
          language: en
          isVerbose: ${{ parameters.isVerbose }}
          primaryRepoWorkDir: '$(selfSourcesDir)'