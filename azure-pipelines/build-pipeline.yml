trigger:
  branches:
    include:
    - vnext
    - master
    - 'sstoychev/ng-pipes'
  paths:
    exclude:
    - '**/jp/*'
    - '**/kr/*'
pr:
  branches:
    exclude:
    - '*'  # must quote since "*" is a YAML reserved character; we want a string

parameters:
- name: isVerbose
  displayName: 'Get verbose output from steps - where configurable'
  type: boolean
  default: false

name: $(BuildDefinitionName)_$(Year:yyyy).$(Month).$(DayOfMonth)$(Rev:.r)

variables:
  - name: buildType
    ${{ if eq(variables['Build.SourceBranchName'], 'master') }}:
      value: 'production'
    ${{ else }}:  
      value: 'staging'
  # Since we are using more than 1 git repo, we need to explicitly specify that we want to compile inside the 1st git repo
  - name: selfSourcesDir
    value: '$(Build.SourcesDirectory)\igniteui-xplat-docs'

resources:
  repositories:
    - repository: IgniteUIDocFX # In a different organization
      endpoint: ESShared
      type: github
      name: IgniteUI/igniteui-docfx

stages:
- stage: Build
  pool:
    name: BuildAgentOnPrem
    demands: npm
  jobs:
  - job: BuildDocs
    
    steps:
      - checkout: self
      - task: NodeTool@0
        inputs:
          versionSource: 'spec'
          versionSpec: '16.x'

      - task: RegexReplace@3
        displayName: 'replace environment in doc/docfx'
        inputs:
          InputSearchPattern: |
            doc\**\*.*
            docfx\**\*.*
          FindRegex: 'environment:dvDemosBaseUrl'
          ReplaceRegex: 'environment:demosBaseUrl'
          UseUTF8: true
          UseRAW: true
        enabled: false

      - task: Npm@1
        displayName: 'npm ci'
        inputs:
          command: custom
          workingDir: '$(selfSourcesDir)'
          verbose: ${{ parameters.isVerbose }}
          customCommand: ci

      - template: templates/build-steps-template.yml
        parameters:
          buildType: $(buildType)
          platform: WebComponents
          language: en
          isVerbose: ${{ parameters.isVerbose }}
          workingDir: '$(selfSourcesDir)'

      - template: templates/build-steps-template.yml
        parameters:
          buildType: $(buildType)
          platform: Blazor
          language: en
          isVerbose: ${{ parameters.isVerbose }}
          workingDir: '$(selfSourcesDir)'

      - template: templates/build-steps-template.yml
        parameters:
          buildType: $(buildType)
          platform: React
          language: en
          isVerbose: ${{ parameters.isVerbose }}
          workingDir: '$(selfSourcesDir)'

      - checkout: IgniteUIDocFX

      - task: CopyFiles@2
        displayName: 'Copy the build files to the Git repo'
        inputs:
          SourceFolder: '$(Build.SourcesDirectory)\dist\Angular\${{ parameters.language }}'
          TargetFolder: '$(Build.SourcesDirectory)\igniteui-docfx\${{ parameters.language }}'
          OverWrite: true
  
      - script: |
          git add -A
          git commit -m "Adding changes from build $(Build.BuildNumber)"
          git push -u origin ESShared/XPlaform_${{ parameters.language }}_$(Build.BuildNumber)
        displayName: 'Commit the changes and make a PR'
        workingDirectory: $(System.DefaultWorkingDirectory)\igniteui-docfx
      
      - task: CreatePullRequest@1
        inputs:
          repoType: 'GitHub'
          githubEndpoint: 'ESShared'
          githubRepository: 'IgniteUI/igniteui-docfx'
          sourceBranch: 'ESShared/XPlaform_${{ parameters.language }}_$(Build.BuildNumber)'
          targetBranch: '$(Build.SourceBranchName)'
          title: 'Changes from $(Build.DefinitionName)'

      - task: PublishPipelineArtifact@1
        displayName: 'Publish pipeline artifacts'
        inputs:
          targetPath: '$(Build.ArtifactStagingDirectory)'
          artifact: 'XPlatDocFX'
